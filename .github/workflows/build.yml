name: CMake Build and Test

on:
  [push, pull_request]

jobs:
  build:
    name: ${{ matrix.config.name }} ${{ matrix.build_type }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        build_type:
          [Release, Debug]
        config:
        - name: "Windows"
          os: "windows-latest"
          cc: "cl"
          cxx: "cl"
        - name: "Linux GCC"
          os: "ubuntu-latest"
          cc: "gcc"
          cxx: "g++"
        # - name: "Linux CLang"
        #   os: "ubuntu-latest"
        #   cc: "clang"
        #   cxx: "clang++"

    steps:
    - uses: actions/checkout@v4

    - name: Configure
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} -DCMAKE_CONFIGURATION_TYPES=${{ matrix.build_type }} -DCPPTEST_LITE_CREATE_TESTS=ON
      env:
        CC: ${{ matrix.config.cc }}
        CXX: ${{ matrix.config.cxx }}

    - name: Build
      run: cmake --build ${{github.workspace}}/build --config ${{ matrix.build_type }}

    - name: Test
      run: ctest --test-dir ${{github.workspace}}/build -C ${{ matrix.build_type }} --output-on-failure

    - name: Report Linux
      uses: EnricoMi/publish-unit-test-result-action@v2.6.0
      if: ${{ matrix.config.os != 'windows-latest' }}
      with:
        junit_files: '${{github.workspace}}/build/*.xml'
        check_name: ${{ matrix.config.name }} Test Results
        comment_mode: off
        fail_on: errors
        check_run_annotations: none

    - name: Report Windows
      uses: EnricoMi/publish-unit-test-result-action/composite@v2.6.0
      if: ${{ matrix.config.os == 'windows-latest' }}
      with:
        junit_files: '${{github.workspace}}/build/*.xml'
        check_name: ${{ matrix.config.name }} Test Results
        comment_mode: off
        fail_on: errors
        check_run_annotations: none
